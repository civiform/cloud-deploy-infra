#! /usr/bin/env bash
# Script for running the commands supported by the deploy system by calling run.py.
# See comments below for why we need this script rather than running run.py directly.
# TODO(#4612) Enable the env-var-docs variable generation feature by using this script
# instead of run.py across the civiform-deploy repository

# In the server code repository in git(civiform), we define a python package
# called env-var-docs: https://github.com/civiform/civiform/tree/main/env-var-docs
# Its purpose is to automate various aspects of adding a variable to application.conf.
# Variables in application.conf make the server configurable.
# To make the variables configurable via the deploy system, we need the env-var-docs package.
# To get access to the package, we create a python virtual environment(venv),
# install the package and activate the venv. The activation has to happen in the
# parent process before the python code is run.
# This is why we need a bash script that preceeds the python code
source cloud/shared/bin/python_env_setup

# Get the arguments that we want to pass to run.py
while getopts s:c:t: flag; do
  case "${flag}" in
    # The civiform_config file that contains the values to configure the deployment
    s) source_config=${OPTARG} ;;
    # The command that the run.py script should execute
    c) command=${OPTARG} ;;
    # The tag of the image that should be used for this deployment (e.g. "latest")
    t) tag=${OPTARG} ;;
  esac
done

#######################################
# Get the value in a JSON document at the given URL.
# Arguments:
#   1: URL of the JSON document
#   2: Path of the value in bracket notation e.g. "['object']['sha']"
# Returns:
#   Value found at the specified path in the JSON document
#######################################
function fetch_json_val() {
  curl -s "${1}" \  \
    | python3 -c "import sys, json; print(json.load(sys.stdin)${2})"
}

# If tag is "latest" get the latest release number (eg. v1.26.0)
if [[ ${tag} == "latest" ]]; then
  tag=$(fetch_json_val \
    "https://api.github.com/repos/civiform/civiform/releases/latest" \
    "['tag_name']")
fi

# Get the commit sha for the commit at the tip of the CiviForm version being deployed
tag_url=$(fetch_json_val \
  "https://api.github.com/repos/civiform/civiform/git/refs/tags/${tag}" \
  "['object']['url']")
commit_sha=$(fetch_json_val ${tag_url} "['object']['sha']")

dependencies_file_path="cloud/shared/bin/env-var-docs-python-dependencies.txt"

# Write the correct version of the env-var-docs/parser-package to the
# dependencies file to be downloaded
echo "env-var-docs @ git+https://github.com/civiform/civiform.git@${commit_sha}\
#subdirectory=env-var-docs/parser-package" >>$dependencies_file_path

initialize_python_env $dependencies_file_path

cloud/shared/bin/run.py --command $command --tag $tag --config $source_config
